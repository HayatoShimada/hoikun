@page "/user-profile"
@inject IDbContextService DbContextService
@inject UserStateService UserStateService
@inject NavigationManager Navigation


@if (user == null)
{
    <p>Loading...</p>
}
else
{
    <div class="card mb-4">
        <div class="card-header">
            現在の登録情報

        </div>

        <div class="card-body">
            <h4>@user.Name</h4>

            <p><strong>Email:</strong> @user.Email</p>
            <p><strong>役職:</strong> @user.Role</p>
            <p><strong>更新日:</strong> @user.CreatedAt.ToString()</p>
            <p><strong>LINE ID:</strong> @(user.LineId != null ? user.LineId : "未連携")</p>
            <button class="line-login-btn"></button>
        </div>


        
    </div>

    @if(children != null)
    {


        @foreach (var child in children)
        {
            <div class="card mb-3">
                <div class="card-header">
                    子供情報 @child.Rank
                </div>
                <div class="card-body">
                    <h4>@child.Name</h4>
                    <p><strong>誕生日:</strong> @child.Birthday.ToString()</p>
                    <p><strong>所属クラス:</strong> @child.Class.Name</p>
                    <p><strong>アレルギー:</strong> @child.AllergyInfo</p>
                    <p><strong>備考：</strong> @child.Notes</p>
                </div>
            </div>
        }
    }
    else
    {
        <p class="mb-4">子供情報がありません。</p>
    }
    <div class="mb-4">
        <DxButton CssClass="w-100"
                  RenderStyle="ButtonRenderStyle.Success"
                  Click="EditProfile">
            プロフィールを編集
        </DxButton>
    </div>
   


}

@code {
    private User? user;
    private List<Children>? children;


    protected override async Task OnInitializedAsync()
    {
        // 例: ログイン中のユーザーIDを取得（認証機能に応じて適宜変更）
        int? userId = UserStateService.ModelId;

        if(userId == null)
        {
            return;
        }

        var users = await DbContextService.GetUserAsync(null);
        user = users?.FirstOrDefault(u => u.UserId == userId);
        children = await DbContextService.GetChildrenAsync(query => query.Where(c => c.UserId == userId));
    }

    protected void EditProfile()
    {
        Navigation.NavigateTo("/edit-user-profile");
    }
}
