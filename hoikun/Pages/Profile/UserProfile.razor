@page "/user-profile"
@inject IDbContextService DbContextService
@inject UserStateService UserStateService
@inject NavigationManager Navigation

<h3>現在の登録情報</h3>

@if (user == null)
{
    <p>Loading...</p>
}
else
{
    <div class="card">
        <h4>@user.Name</h4>
        <p><strong>Email:</strong> @user.Email</p>
        <p><strong>LINE ID:</strong> @user.LineId</p>
        <p><strong>役職:</strong> @user.Role</p>
        <p><strong>更新日:</strong> @user.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</p>
    </div>

    @if(children != null)
    {
        <h3>子供情報</h3>
        @foreach (var child in children)
        {
            <div class="card">
                <h4>@child.Name</h4>
                <p><strong>誕生日:</strong> @child.Birthday.ToString()</p>
            </div>
        }
    }
    else
    {
        <p>子供情報がありません。</p>
    }

    <DxButton CssClass="w-100"
              RenderStyle="ButtonRenderStyle.Success"
              Click="EditProfile">
        プロフィールを編集</DxButton>


}

@code {
    private User? user;
    private List<Children>? children;


    protected override async Task OnInitializedAsync()
    {
        // 例: ログイン中のユーザーIDを取得（認証機能に応じて適宜変更）
        int? userId = UserStateService.ModelId;

        if(userId == null)
        {
            return;
        }

        var users = await DbContextService.GetUserAsync(null);
        user = users?.FirstOrDefault(u => u.UserId == userId);
        children = await DbContextService.GetChildrenAsync(query => query.Where(c => c.UserId == userId));
    }

    protected void EditProfile()
    {
        Navigation.NavigateTo("/edit-user-profile");
    }
}
